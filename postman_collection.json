{
	"info": {
		"_postman_id": "flash-promos-marketplace-collection",
		"name": "Flash Promos Marketplace API",
		"description": "Colecci√≥n completa de APIs para el marketplace de promociones flash con tests automatizados y flujos de trabajo organizados por m√≥dulos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"version": {
			"major": 2,
			"minor": 0,
			"patch": 0
		}
	},
	"item": [
		{
			"name": "üîê Authentication",
			"description": "Endpoints para autenticaci√≥n y gesti√≥n de tokens",
			"item": [
				{
					"name": "User Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{login_username}}\",\n    \"password\": \"{{login_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login/",
							"host": ["{{base_url}}"],
							"path": ["api", "auth", "login", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access');",
									"    ",
									"    // Guardar token en variables de entorno y globales",
									"    pm.environment.set('access_token', jsonData.access);",
									"    pm.globals.set('access_token', jsonData.access);",
									"    pm.collectionVariables.set('access_token', jsonData.access);",
									"    ",
									"    if (jsonData.refresh) {",
									"        pm.environment.set('refresh_token', jsonData.refresh);",
									"        pm.globals.set('refresh_token', jsonData.refresh);",
									"        pm.collectionVariables.set('refresh_token', jsonData.refresh);",
									"    }",
									"    ",
									"    if (jsonData.user) {",
									"        pm.environment.set('user_id', jsonData.user.id);",
									"        pm.environment.set('username', jsonData.user.username);",
									"        pm.environment.set('user_type', jsonData.user.user_type);",
									"        pm.globals.set('current_user_id', jsonData.user.id);",
									"        pm.globals.set('current_username', jsonData.user.username);",
									"    }",
									"    ",
									"    console.log('‚úÖ Login exitoso - Token guardado globalmente');",
									"    console.log('Usuario:', jsonData.user ? jsonData.user.username : 'N/A');",
									"    console.log('Token disponible en: environment, globals y collection variables');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "üë• Users",
			"description": "APIs para gesti√≥n de usuarios y perfiles",
			"item": [
				{
					"name": "User Registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"testpassword123\",\n    \"password_confirm\": \"testpassword123\",\n    \"user_type\": \"regular\",\n    \"phone_number\": \"+1234567890\",\n    \"latitude\": 40.7831,\n    \"longitude\": -73.9712,\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/register/",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "register", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('user_id', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/profile/",
							"host": ["{{base_url}}"],
							"path": ["api", "users", "profile", ""]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üè™ Stores",
			"description": "APIs para gesti√≥n de tiendas",
			"item": [
				{
					"name": "Get All Stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/stores/",
							"host": ["{{base_url}}"],
							"path": ["api", "stores", ""]
						}
					},
					"response": []
				},
				{
					"name": "Get Store by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/stores/{{store_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "stores", "{{store_id}}", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has store data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('address');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mi Tienda de Prueba\",\n    \"address\": \"123 Calle Principal, Ciudad\",\n    \"latitude\": 40.7831,\n    \"longitude\": -73.9712,\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/stores/",
							"host": ["{{base_url}}"],
							"path": ["api", "stores", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has store data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('store_id', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Update Store",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mi Tienda Actualizada\",\n    \"address\": \"456 Nueva Direcci√≥n, Ciudad\",\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/stores/{{store_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "stores", "{{store_id}}", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated store data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('address');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "üì¶ Products",
			"description": "APIs para gesti√≥n de productos",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products/",
							"host": ["{{base_url}}"],
							"path": ["api", "products", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"store\": {{store_id}},\n    \"name\": \"Producto de Prueba\",\n    \"description\": \"Descripci√≥n del producto de prueba\",\n    \"original_price\": \"99.99\",\n    \"is_available\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/products/",
							"host": ["{{base_url}}"],
							"path": ["api", "products", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has product data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('product_id', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "products", "{{product_id}}", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has product data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('original_price');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Products by Store",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products/?store={{store_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "products", ""],
							"query": [
								{
									"key": "store",
									"value": "{{store_id}}"
								}
							]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Products belong to specified store\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('store');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"store\": {{store_id}},\n    \"name\": \"Producto Actualizado\",\n    \"description\": \"Descripci√≥n actualizada del producto\",\n    \"original_price\": \"129.99\",\n    \"is_available\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "products", "{{product_id}}", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated product data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('original_price');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "‚ö° Flash Promotions",
			"description": "APIs para gesti√≥n de promociones flash",
			"item": [
				{
					"name": "Get All Flash Promos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/flash-promos/",
							"host": ["{{base_url}}"],
							"path": ["api", "flash-promos", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Flash Promo by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/flash-promos/{{flash_promo_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "flash-promos", "{{flash_promo_id}}", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has flash promo data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('promo_price');",
									"    pm.expect(jsonData).to.have.property('start_time');",
									"    pm.expect(jsonData).to.have.property('end_time');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Create Flash Promo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product\": {{product_id}},\n    \"promo_price\": \"49.99\",\n    \"start_time\": \"14:00:00\",\n    \"end_time\": \"16:00:00\",\n    \"eligible_segments\": [\"new_users\", \"frequent_buyers\"],\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/flash-promos/",
							"host": ["{{base_url}}"],
							"path": ["api", "flash-promos", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has flash promo data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('flash_promo_id', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Update Flash Promo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product\": {{product_id}},\n    \"promo_price\": \"39.99\",\n    \"start_time\": \"15:00:00\",\n    \"end_time\": \"17:00:00\",\n    \"eligible_segments\": [\"new_users\"],\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/flash-promos/{{flash_promo_id}}/",
							"host": ["{{base_url}}"],
							"path": ["api", "flash-promos", "{{flash_promo_id}}", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has updated flash promo data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('promo_price');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "üìä Notifications",
			"description": "APIs para gesti√≥n de notificaciones",
			"item": [
				{
					"name": "Get Store Notification Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/notifications/store_stats/",
							"host": ["{{base_url}}"],
							"path": ["api", "notifications", "store_stats", ""]
						}
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has notification stats\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('store_id');",
									"    pm.expect(jsonData).to.have.property('store_name');",
									"    pm.expect(jsonData).to.have.property('total_notifications_sent');",
									"    pm.expect(jsonData).to.have.property('period_days');",
									"    pm.expect(jsonData).to.have.property('start_date');",
									"    pm.expect(jsonData).to.have.property('end_date');",
									"    pm.expect(jsonData).to.have.property('notifications_by_status');",
									"    pm.expect(jsonData).to.have.property('unique_users_notified');",
									"    pm.expect(jsonData).to.have.property('notifications_by_day');",
									"    pm.expect(jsonData).to.have.property('notifications_by_type');",
									"    ",
									"    console.log('‚úÖ Store stats retrieved successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "username",
			"value": "",
			"type": "string"
		},
		{
			"key": "store_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "flash_promo_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "login_username",
			"value": "owner_1",
			"type": "string",
			"description": "Username para login (owner_1, owner_2, owner_3, regular_user_1, etc.)"
		},
		{
			"key": "login_password",
			"value": "ownerpass123",
			"type": "string",
			"description": "Password para login (ownerpass123 para owners, userpass123 para users)"
		}
	]
}